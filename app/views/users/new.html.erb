<div>
	<%= render "shared/error_messages"%>
</div>

<div class="content-header">
	<div class="container-fluid">
		<div class="row">
			<div class="col">
				<div class="d-flex justify-content-between">
					<ol class="breadcrumb float-sm-right">
						<li class="breadcrumb-item"><%= link_to "Dashboard", home_index_path %></li>
						<li class="breadcrumb-item"><%= link_to "Users", users_path %></li>
						<li class="breadcrumb-item active">Create user</li>
					</ol>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="card">
	<div class="card-body">
		<%= form_for @user do |f| %>
			<div class="row">
				<div class="form-group col-md-6 mb-2">
					<%= f.label :first_name, class: "required-field" %>
					<%= f.text_field :first_name,  autocomplete: "first_name", class: "form-control", placeholder: "Enter First Name",required: true %>
				</div>
				<div class="form-group col-md-6 mb-2">
					<%= f.label :last_name %>
					<%= f.text_field :last_name,  autocomplete: "last_name", class: "form-control", placeholder: "Enter Last Name" %>
				</div>
				
				<div class="form-group col-md-6 mb-2">
					<%= f.label :email, class: "required-field" %>
					<%= f.email_field :email, autofocus: true, autocomplete: "email", class: "form-control ",id: "user_email", placeholder: "Enter Your Email",required: true, uniq: true %>
					<span id="user_email_error"></span>
				</div>

				<% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
					<div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
				<% end %>

				<div class="form-group col-md-6 mb-2">
					<%= f.label :phone %>
					<%= f.text_field :phone, autofocus: true,autocomplete: "phone", class: "form-control",id: "user_phone",onkeyup: "phone()", placeholder: "Enter phone No" %>
					<span id="user_phone_error"></span>
				</div>

				<div class="form-group col-md-6 mb-2">
					<%= f.label :employee_code, class: "required-field" %>
					<%= f.text_field :employee_code, autofocus: true, autocomplete: "employee_code",  class: "form-control", placeholder: "Enter Employee Code",required: true %>
				</div>

				<div class="form-group col-md-6 mb-2">
					<%= f.label :DOB %>
					<%= f.date_field :dob, autofocus: true,id: "date_valid",  class: "form-control ", value: "Enter Date Of Birth",max: Date.today - 18.years %>
					<span id="user_date_error"></span>
				</div>

				<div class="form-group col-md-6 mb-2">
					<%= f.label :role, class: "required-field" %>
					<%= f.select :role_id, options_for_select(Role.where.not(name: 'admin').collect { |role| [role.name.titleize, role.id] }), { include_blank: '--Select Role--' }, { class: "form-control", required: true } %>
				</div>

				<div class="form-group col-md-6 mb-2">
					<%= f.label :designation %>
					<%= f.select :designation,options_for_select(User.designations.keys.map { |d| [d.humanize, d] }),{include_blank: "--Select Designation--"},{class: "form-control" }%>
				</div>

				<div class="form-group col-md-6 mb-2">
					<%= f.label :gender %>
					<%= f.select :gender,options_for_select(User.genders.keys.map { |g| [g.humanize, g] }), {include_blank: "--Select Gender--"},{class: "form-control"}%>
				</div>

				<div class="form-group col-md-6 mb-2">
					<%= f.label :zip_code %>
					<%= f.text_field :zip_code, autofocus: true, autocomplete: "zip_code", class: "form-control", placeholder: "Enter Zip-Code"   %>
				</div>

				<div class="form-group mb-2">
					<%= f.label :address %>
					<%= f.text_area :address, autofocus: true, autocomplete: "address", class: "form-control", placeholder: "Enter Address" %>
				</div>


				<div class="form-group mb-2">
					<%= f.label :password %> <i>(create your password)</i>
					<%= f.password_field :password, autocomplete: "new-password", class: "form-control", id: "pass", placeholder: "Create Password" %>
					<% if @minimum_password_length %>
						
						<em><%= @minimum_password_length %> characters minimum</em>
					<% end %>
				</div>

				<div class="form-group mb-2">
					<%= f.label :password_confirmation %> <i>(please confirm your password)</i>
					<%= f.password_field :password_confirmation, autocomplete: "new-password",  class: "con_pass form-control",id: "con_pass confirm-pass", placeholder: "Confirm Password"%>
					<span id="user_pass_error"></span>
				</div>

				<div class="form-group mt-2">
					<%= f.submit "save", class: "btn btn-sm btn-primary send-request", id: "sb" %>
				</div>	
			</div>
		<% end %>
	</div>
</div>

<script>
	document.addEventListener("turbo:load", function() {
		var emails = [];
		$.ajax({
			type: "GET",
			url: "/users/checkemail",
			dataType: "json",
			data: { key1: true },
			success: function(response) {
				emails = response.emails; 
			},
			error: function(jqXHR, textStatus, errorThrown) {
				console.error("Error fetching emails:", errorThrown);
			}
		});

		$("#user_email").on("keyup", function() {
			var userEmail = $(this).val();
			if (userEmail !== "") {
				var emailRegex = /^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-Z0-9]{2,4}$/;
				if (!emailRegex.test(userEmail)) {
					$("#user_email").addClass("error");
					$("#user_email_error").text("Invalid email format").css("color", "red");
					$('.send-request')[0].disabled = true;
				} else {
					if (emails.indexOf(userEmail) !== -1) {
						$("#user_email").addClass("error error-border-color");
						$("#user_email_error").text("Email already exists please enter a another email").css("color", "red", )
						$('.send-request')[0].disabled = true;
					} else {
						$("#user_email").removeClass("error");
						$("#user_email_error").text("");
						$('.send-request')[0].disabled = false;
					}
				}
			} else {
				$("#user_email").removeClass("error");
				$("#user_email_error").text("");
				$('.send-request')[0].disabled = false;
			}
		});
	
	});
	function phone() { 
		
		var phoneField = document.getElementById('user_phone');
		var errorSpan = document.getElementById('user_phone_error');
		var maxPhoneNumberLength = 10;
		var minPhoneNumberLength = 10;

		phoneField.addEventListener('keyup', function () {
			var phoneNumber = phoneField.value;
			if (phoneNumber != ""){
				if (/[^0-9]/.test(phoneNumber)) {
					phoneField.classList.add('error');
					errorSpan.textContent = 'Phone number must contain only numeric characters';
					errorSpan.style.color = 'red';
					$('.send-request')[0].disabled = true;
				} else if (phoneNumber.length > maxPhoneNumberLength) {
					phoneField.classList.add('error');
					errorSpan.textContent = 'Phone number cannot exceed ' + maxPhoneNumberLength + ' characters';
					errorSpan.style.color = 'red';
					$('.send-request')[0].disabled = true;
				} else if (phoneNumber.length < minPhoneNumberLength) {
					phoneField.classList.add('error');
					errorSpan.textContent = 'Phone number should be ' + minPhoneNumberLength + ' characters';
					errorSpan.style.color = 'red';
					$('.send-request')[0].disabled = true;
				} else {
					phoneField.classList.remove('error');
					errorSpan.textContent = '';
					$('.send-request')[0].disabled = false;
				}
			}else{
				phoneField.classList.remove('error');
				errorSpan.textContent = '';
				$('.send-request')[0].disabled = false;
			}
		});
	};

	document.addEventListener("turbo:load", function() {
		var passwordField = $('#pass');
		var confirmationField = $('.con_pass');
		var confirmationErrorSpan = $('#user_pass_error');

		passwordField.on('keyup', function () {
			var password = passwordField.val();
			var confirmation = confirmationField.val();
			if (password !== "" && confirmation === "") {
				confirmationField.addClass('error');
				confirmationErrorSpan.text('Please enter password to confirm password').css('color', 'red');
				$('.send-request')[0].disabled = true;	
			} else if (confirmation !== "") {
				if (password !== confirmation) {
					confirmationField.addClass('error');
					confirmationErrorSpan.text('Passwords do not match').css('color', 'red');
					$('.send-request')[0].disabled = true;
				} else {
					confirmationField.removeClass('error');
					confirmationErrorSpan.text('');
					$('.send-request')[0].disabled = false;
				}
			} else {
				confirmationField.removeClass('error');
					confirmationErrorSpan.text('');
					$('.send-request')[0].disabled = false;
			}
		});

		confirmationField.on('input', function () {
			var password = passwordField.val();
			var confirmation = confirmationField.val();

			if (confirmation !== "" && password !== confirmation) {
				confirmationField.addClass('error');
				confirmationErrorSpan.text('Passwords do not match').css('color', 'red');
				$('.send-request')[0].disabled = true;
			} else {
				confirmationField.removeClass('error');
				confirmationErrorSpan.text('');
				$('.send-request')[0].disabled = false;
			}
		});
	});
	
	document.addEventListener("turbo:load", function() {
		var dateField = $('#date_valid');
		var dateErrorSpan = $('#user_date_error');

		dateField.on('input', function () {
			var selectedDate = new Date(dateField.val());
			var currentDate = new Date();
			var minBirthDate = new Date();
			minBirthDate.setFullYear(currentDate.getFullYear() - 18);

			if (selectedDate > currentDate) {
				dateField.addClass('error');
				dateErrorSpan.text('You cannot select a future date').css('color', 'red');
				$('.send-request')[0].disabled = true;
			} else if (selectedDate > minBirthDate) {
				dateField.addClass('error');
				dateErrorSpan.text('You must be at least 18 years old').css('color', 'red');
				$('.send-request')[0].disabled = true;
			} else {
				dateField.removeClass('error');
				dateErrorSpan.text('');
				$('.send-request')[0].disabled = false;
			}
		});
	});

</script>

