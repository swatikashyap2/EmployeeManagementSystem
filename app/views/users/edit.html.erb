<div>
	<% if flash.now[:error].present? %>
		<div class="alert alert-danger alert-dismissible fade show" role="alert">
			<%= flash.now[:error] %>
			<button type="button" class="close" data-dismiss="alert" aria-label="Close">
				<span aria-hidden="true">&times;</span>
			</button>
			<ul>
				<% flash.now[:message].each do |msg| %>
					<li><%= msg %></li>
				<% end %>
			</ul>
		</div>
	<% end %>
</div>
<div class="content-header">
	<div class="container-fluid">
		<div class="row">
			<div class="col">
				<div class="d-flex justify-content-between">
					<ol class="breadcrumb float-sm-right">
						<li class="breadcrumb-item"><%= link_to "Dashboard", home_index_path %></li>
						<li class="breadcrumb-item"><%= link_to "Users", users_path %></li>
						<li class="breadcrumb-item active">Edit user</li>
					</ol>
				</div>
			</div>
		</div>	
	</div>
</div>
<div class="card">
	<div class="card-body">
		<%= form_for @user do|f|%>
			<div class="row">
				<div class="form-group col-md-6 mb-2">
					<%= f.label :first_name, class: "required-field" %>
					<%= f.text_field :first_name,  autocomplete: "first_name", class: "form-control", placeholder: "Enter first name", required: true %>
				</div>
				<div class="form-group col-md-6 mb-2">
					<%= f.label :last_name %>
					<%= f.text_field :last_name,  autocomplete: "last_name", class: "form-control", placeholder: "Enter last name" %>
				</div>
				
				<div class="form-group col-md-6 mb-2">
					<%= f.label :email, class: "required-field" %>
					<%= f.email_field :email, autofocus: true, autocomplete: "email", class: "form-control",id: "user_email", placeholder: "Enter email",required: true, uniq: true %>
					<span id="user_email_error"></span>
				</div>

				<% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
					<div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
				<% end %>

				<div class="form-group col-md-6 mb-2">
					<%= f.label :phone %>
					<%= f.text_field :phone, autofocus: true, autocomplete: "phone",id: "user_phone", class: "form-control", placeholder: "Enter phone no" %>
					<span id="user_phone_error"></span>
				</div>
				<%if is_admin?%>
					<div class="form-group col-md-6 mb-2">
						<%= f.label :employee_code, class: "required-field" %>
						<%= f.text_field :employee_code, autofocus: true, autocomplete: "employee_code",  class: "form-control", placeholder: "Enter employee code", required: true %>
					</div>
				<%else%>
					<div class="form-group col-md-6 mb-2">
						<%= f.label :employee_code %>
						<p class="field-value"><span class="mx-1"><%= @user.employee_code %></span></p>
					</div>
				<%end%>
				<div class="col-md-6 field mb-2">
					<%= f.label :dob %>
					<%= f.date_field :dob, autofocus: true, autocomplete: "dob", id:"date_valid", class: "form-control datepicker", placeholder: "Enter date of birth"  %>
					<span id="user_date_error"></span>
				</div>
				<% if is_admin?%>
					<%if @user.eql?(current_user)%>
						<div class="form-group col-md-6 mb-2">
							<%= f.label :role %>
							<p class="field-value"><span class="mx-1"><%= @user.role.name%></span></p>
						</div>
					<%else%>
						<div class="form-group col-md-6 mb-2">
							<%= f.label :role, class: "required-field" %>
							<%= f.select :role_id, options_for_select(Role.where.not(name: 'admin').collect { |role| [role.name, role.id] },selected: @user.role_id),{include_blank: '--Select role--'}, {class: "form-control",required: true } %>
						</div>
					<%end%>
				<%else%>
					<div class="col-md-6 field mb-2">
						<%= f.label :role %>
						<p class="field-value"><span class="mx-1"><%= @user.role.name%></span></p>
					</div>
				<%end%>
				<% if is_employee?%>
					<div class="col-md-6 field mb-2">
						<%= f.label :designation %>
						<p class="field-value"><span class="mx-1"><%= @user.designation%></span></p>
					</div>
				<%else%>
					<div class="form-group col-md-6 mb-2">
						<%= f.label :designation %>
						<%= f.select :designation, User.designations.keys.map { |d| [d.humanize, d] },{include_blank: "Select Designation"},{class: "form-control" }%>
					</div>
				<%end%>
				<div class="form-group col-md-6 mb-2">
					<%= f.label :gender %>
					<%= f.select :gender, User.genders.keys.map { |g| [g.humanize, g] }, {nclude_blank: "Select Gender"},{class: "form-control"}%>
				</div>
				
				<div class=" col-md-6 field mb-2">
					<%= f.label :zip_code %>
					<%= f.text_field :zip_code, autofocus: true, autocomplete: "zip_code", class: "form-control", placeholder: "Enter zip-code"   %>
				</div>

				<div class="field mb-2">
					<%= f.label :address %>
					<%= f.text_area :address, autofocus: true, autocomplete: "address", class: "form-control", placeholder: "Enter address" %>
				</div>

				<% if is_admin? || is_employee? %>
					<div class="field mb-2">
						<%= f.label :password %> <i>(leave blank if you don't want to change it)</i>
						<%= f.password_field :password, autocomplete: "new-password",id: "pass", class: "form-control", placeholder: "Create password" %>
						<% if @minimum_password_length %>
							
							<em><%= @minimum_password_length %> characters minimum</em>
						<% end %>
					</div>

					<div class="field mb-2">
						<%= f.label :password_confirmation %>
						<%= f.password_field :password_confirmation, autocomplete: "new-password",  class: " con_pass form-control", placeholder: "Confirm password"%>
						<span id="user_pass_error"></span>
					</div>
				<%end%>
				<div class="field mt-2">
					<%= f.submit "Update", class: "btn btn-sm btn-primary" %>
				</div>	
			</div>
		<% end %>
	</div>
</div>
<style>
	.field-value{
		border-radius: 4px;
		padding: 6px;
		border: 1px solid #cedae7;
		color: #495057;
		margin: 0px;
	}  
</style>
<script>
	document.addEventListener("turbo:load", function() {
		var emails = [];
		var itsemail;

		$.ajax({
			type: "GET",
			url: "/users/checkemail",
			dataType: "json",
			data: { key1: true },
			success: function (response) {
				emails = response.emails;
				itsemail = response.itsemail;
				console.log("User's email:", itsemail);

				$("#user_email").on("keyup", function () {
					var userEmail = $(this).val();
				});
			},
			error: function (jqXHR, textStatus, errorThrown) {
				console.error("Error fetching emails:", errorThrown);
			}
		});
	

		$("#user_email").on("keyup", function() {
			var userEmail = $(this).val();
			if (userEmail !== "") {
				var emailRegex = /^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-Z0-9]{2,4}$/;
				if (!emailRegex.test(userEmail)) {
					$("#user_email").addClass("error");
					$("#user_email_error").text("Invalid email format").css("color", "red");
				} else {
					if (emails.indexOf(userEmail) !== -1) {
						$("#user_email").addClass("error");
						$("#user_email_error").text("Email already exists please enter a another email").css("color", "red");
					} else {
						$("#user_email").removeClass("error");
						$("#user_email_error").text("");
					}
				}
			} else {
				$("#user_email").removeClass("error");
				$("#user_email_error").text("");
			}
		}); 
	});
	document.addEventListener("turbo:load", function() {
		var phoneField = document.getElementById('user_phone');
		var errorSpan = document.getElementById('user_phone_error');
		var maxPhoneNumberLength = 10;

		phoneField.addEventListener('keyup', function () {
			var phoneNumber = phoneField.value;
			if (/[^0-9]/.test(phoneNumber)) {
				phoneField.classList.add('error');
				errorSpan.textContent = 'Phone number must contain only numeric characters';
				errorSpan.style.color = 'red';
			} else if (phoneNumber.length > maxPhoneNumberLength) {
				phoneField.classList.add('error');
				errorSpan.textContent = 'Phone number cannot exceed ' + maxPhoneNumberLength + ' characters';
				errorSpan.style.color = 'red';
			} else {
				phoneField.classList.remove('error');
				errorSpan.textContent = '';
			}
		});
	});

	document.addEventListener("turbo:load", function() {
		var passwordField = $('#pass');
		var confirmationField = $('.con_pass');
		var confirmationErrorSpan = $('#user_pass_error');

		passwordField.on('input', function () {
			var password = passwordField.val();
			var confirmation = confirmationField.val();
			if (password !== "" && confirmation === "") {
				confirmationField.addClass('error');
				confirmationErrorSpan.text('Please confirm password').css('color', 'red');
			} else if (confirmation !== "") {
				if (password !== confirmation) {
					confirmationField.addClass('error');
					confirmationErrorSpan.text('Passwords do not match').css('color', 'red');
				} else {
					confirmationField.removeClass('error');
					confirmationErrorSpan.text('');
				}
			}
		});

		confirmationField.on('input', function () {
			var password = passwordField.val();
			var confirmation = confirmationField.val();

			if (confirmation !== "" && password !== confirmation) {
				confirmationField.addClass('error');
				confirmationErrorSpan.text('Passwords do not match').css('color', 'red');
			} else {
				confirmationField.removeClass('error');
				confirmationErrorSpan.text('');
			}
		});
	});
	
	document.addEventListener("turbo:load", function() {
		var dateField = $('#date_valid');
		var dateErrorSpan = $('#user_date_error');

		dateField.on('input', function () {
			var selectedDate = new Date(dateField.val());
			var currentDate = new Date();
			if (selectedDate > currentDate) {
				dateField.addClass('error');
				dateErrorSpan.text('You cannot select a future date').css('color', 'red');
			} else {
				dateField.removeClass('error');
				dateErrorSpan.text('');
			}
		});
	});

</script>
